(function() {var implementors = {};
implementors["aho_corasick"] = [{"text":"impl&lt;S:&nbsp;Clone + StateID&gt; Clone for AhoCorasick&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Clone for AhoCorasickBuilder","synthetic":false,"types":[]},{"text":"impl Clone for MatchKind","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for MatchKind","synthetic":false,"types":[]},{"text":"impl Clone for Config","synthetic":false,"types":[]},{"text":"impl Clone for Builder","synthetic":false,"types":[]},{"text":"impl Clone for Searcher","synthetic":false,"types":[]},{"text":"impl Clone for Match","synthetic":false,"types":[]}];
implementors["base64"] = [{"text":"impl Clone for DecodeError","synthetic":false,"types":[]},{"text":"impl Clone for CharacterSet","synthetic":false,"types":[]},{"text":"impl Clone for Config","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Clone for BigEndian","synthetic":false,"types":[]},{"text":"impl Clone for LittleEndian","synthetic":false,"types":[]}];
implementors["bytes"] = [{"text":"impl Clone for Bytes","synthetic":false,"types":[]},{"text":"impl Clone for BytesMut","synthetic":false,"types":[]}];
implementors["carapax"] = [{"text":"impl Clone for ErrorPolicy","synthetic":false,"types":[]},{"text":"impl Clone for Principal","synthetic":false,"types":[]},{"text":"impl Clone for PrincipalUser","synthetic":false,"types":[]},{"text":"impl Clone for PrincipalChat","synthetic":false,"types":[]},{"text":"impl Clone for TranslatorStore","synthetic":false,"types":[]},{"text":"impl Clone for Translator","synthetic":false,"types":[]},{"text":"impl Clone for TranslationKey","synthetic":false,"types":[]},{"text":"impl Clone for RateLimitList","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Clone&gt; Clone for SessionManager&lt;B&gt;","synthetic":false,"types":[]}];
implementors["combine"] = [{"text":"impl&lt;T:&nbsp;Clone, R:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Info&lt;T, R, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Commit&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for UnexpectedParse","synthetic":false,"types":[]},{"text":"impl Clone for StringStreamError","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone&gt; Clone for Tracked&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, E:&nbsp;Clone&gt; Clone for ParseResult&lt;T, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, R:&nbsp;Clone&gt; Clone for Info&lt;T, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Stream&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone, X:&nbsp;Clone&gt; Clone for Stream&lt;Input, X&gt;","synthetic":false,"types":[]},{"text":"impl Clone for IndexPositioner","synthetic":false,"types":[]},{"text":"impl Clone for SourcePosition","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone&gt; Clone for Span&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone, E:&nbsp;Clone&gt; Clone for Stream&lt;S, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone, U:&nbsp;Clone&gt; Clone for Stream&lt;S, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for PartialStream&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for CompleteStream&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for MaybePartialStream&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Clone for SliceStream&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone&gt; Clone for IteratorStream&lt;Input&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Clone for PointerOffset&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone&gt; Clone for TakeUntilByte&lt;Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Input as StreamOnce&gt;::Error: ParseError&lt;&lt;Input as StreamOnce&gt;::Token, &lt;Input as StreamOnce&gt;::Range, &lt;Input as StreamOnce&gt;::Position&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: RangeStream,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input::Range: AsRef&lt;[u8]&gt; + Range,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input::Range: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone&gt; Clone for TakeUntilByte2&lt;Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Input as StreamOnce&gt;::Error: ParseError&lt;&lt;Input as StreamOnce&gt;::Token, &lt;Input as StreamOnce&gt;::Range, &lt;Input as StreamOnce&gt;::Position&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: RangeStream,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input::Range: AsRef&lt;[u8]&gt; + Range,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input::Range: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone&gt; Clone for TakeUntilByte3&lt;Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Input as StreamOnce&gt;::Error: ParseError&lt;&lt;Input as StreamOnce&gt;::Token, &lt;Input as StreamOnce&gt;::Range, &lt;Input as StreamOnce&gt;::Position&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: RangeStream,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input::Range: AsRef&lt;[u8]&gt; + Range,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input::Range: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone&gt; Clone for Digit&lt;Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Input as StreamOnce&gt;::Error: ParseError&lt;&lt;Input as StreamOnce&gt;::Token, &lt;Input as StreamOnce&gt;::Range, &lt;Input as StreamOnce&gt;::Position&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Stream&lt;Token = char&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone&gt; Clone for Choice&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P1:&nbsp;Clone, P2:&nbsp;Clone&gt; Clone for Or&lt;P1, P2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone&gt; Clone for Optional&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone&gt; Clone for NotFollowedBy&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone&gt; Clone for Try&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone&gt; Clone for LookAhead&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Map&lt;P, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for MapInput&lt;P, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for FlatMap&lt;P, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for AndThen&lt;P, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone, P:&nbsp;Clone&gt; Clone for Recognize&lt;F, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone&gt; Clone for Ignore&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone&gt; Clone for Lazy&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone, R:&nbsp;Clone&gt; Clone for Factory&lt;P, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone, Input:&nbsp;Clone, O:&nbsp;Clone, S:&nbsp;Clone&gt; Clone for Opaque&lt;F, Input, O, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone&gt; Clone for Spanned&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, T:&nbsp;Clone, E:&nbsp;Clone&gt; Clone for Unexpected&lt;I, T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Stream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone, S:&nbsp;Clone&gt; Clone for Message&lt;P, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone, S:&nbsp;Clone&gt; Clone for Expected&lt;P, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone&gt; Clone for Silent&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for FnParser&lt;Input, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E, Input, T&gt; Clone for EnvParser&lt;E, Input, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone, P:&nbsp;Clone&gt; Clone for Recognize&lt;Input, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Input as StreamOnce&gt;::Error: ParseError&lt;&lt;Input as StreamOnce&gt;::Token, &lt;Input as StreamOnce&gt;::Range, &lt;Input as StreamOnce&gt;::Position&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Parser&lt;Input&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: RangeStream,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Input as StreamOnce&gt;::Range: Range,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone&gt; Clone for RecognizeWithValue&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone, P:&nbsp;Clone&gt; Clone for CountMinMax&lt;F, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone, P:&nbsp;Clone&gt; Clone for Many&lt;F, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone, P:&nbsp;Clone&gt; Clone for Many1&lt;F, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone, P:&nbsp;Clone, S:&nbsp;Clone&gt; Clone for SepBy&lt;F, P, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone, P:&nbsp;Clone, S:&nbsp;Clone&gt; Clone for SepBy1&lt;F, P, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone, P:&nbsp;Clone, S:&nbsp;Clone&gt; Clone for SepEndBy&lt;F, P, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone, P:&nbsp;Clone, S:&nbsp;Clone&gt; Clone for SepEndBy1&lt;F, P, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone, Op:&nbsp;Clone&gt; Clone for Chainl1&lt;P, Op&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone, Op:&nbsp;Clone&gt; Clone for Chainr1&lt;P, Op&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone, P:&nbsp;Clone&gt; Clone for TakeUntil&lt;F, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone, P:&nbsp;Clone, E:&nbsp;Clone&gt; Clone for RepeatUntil&lt;F, P, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P1:&nbsp;Clone, P2:&nbsp;Clone&gt; Clone for With&lt;P1, P2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P1:&nbsp;Clone, P2:&nbsp;Clone&gt; Clone for Skip&lt;P1, P2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone, L:&nbsp;Clone, R:&nbsp;Clone, P:&nbsp;Clone&gt; Clone for Between&lt;Input, L, R, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Input as StreamOnce&gt;::Error: ParseError&lt;&lt;Input as StreamOnce&gt;::Token, &lt;Input as StreamOnce&gt;::Range, &lt;Input as StreamOnce&gt;::Position&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Parser&lt;Input&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Parser&lt;Input&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Parser&lt;Input&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;P::Output: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Then&lt;P, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for ThenPartial&lt;P, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for ThenRef&lt;P, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone&gt; Clone for Any&lt;Input&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone, P:&nbsp;Clone&gt; Clone for Satisfy&lt;Input, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone, P:&nbsp;Clone&gt; Clone for SatisfyMap&lt;Input, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone&gt; Clone for Token&lt;Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input::Token: PartialEq,<br>&nbsp;&nbsp;&nbsp;&nbsp;Input::Token: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Clone, E:&nbsp;Clone, T:&nbsp;Clone, Input:&nbsp;Clone&gt; Clone for Tokens&lt;C, E, T, Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Stream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Clone, T:&nbsp;Clone, Input:&nbsp;Clone&gt; Clone for TokensCmp&lt;C, T, Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Stream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone&gt; Clone for Position&lt;Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Stream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, Input:&nbsp;Clone&gt; Clone for OneOf&lt;T, Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Stream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, Input:&nbsp;Clone&gt; Clone for NoneOf&lt;T, Input&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Input: Stream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone, T:&nbsp;Clone&gt; Clone for Value&lt;Input, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Produce&lt;Input, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Input:&nbsp;Clone&gt; Clone for Eof&lt;Input&gt;","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L:&nbsp;Clone, R:&nbsp;Clone&gt; Clone for Either&lt;L, R&gt;","synthetic":false,"types":[]}];
implementors["encoding"] = [{"text":"impl Clone for DecoderTrap","synthetic":false,"types":[]},{"text":"impl Clone for EncoderTrap","synthetic":false,"types":[]},{"text":"impl Clone for ErrorEncoding","synthetic":false,"types":[]},{"text":"impl Clone for ErrorEncoder","synthetic":false,"types":[]},{"text":"impl Clone for ErrorDecoder","synthetic":false,"types":[]},{"text":"impl Clone for ASCIIEncoding","synthetic":false,"types":[]},{"text":"impl Clone for ASCIIEncoder","synthetic":false,"types":[]},{"text":"impl Clone for ASCIIDecoder","synthetic":false,"types":[]},{"text":"impl Clone for SingleByteEncoding","synthetic":false,"types":[]},{"text":"impl Clone for SingleByteEncoder","synthetic":false,"types":[]},{"text":"impl Clone for SingleByteDecoder","synthetic":false,"types":[]},{"text":"impl Clone for UTF8Encoding","synthetic":false,"types":[]},{"text":"impl Clone for UTF8Encoder","synthetic":false,"types":[]},{"text":"impl Clone for UTF8Decoder","synthetic":false,"types":[]},{"text":"impl Clone for Little","synthetic":false,"types":[]},{"text":"impl Clone for Big","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone&gt; Clone for UTF16Encoding&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone&gt; Clone for UTF16Encoder&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Windows949Encoding","synthetic":false,"types":[]},{"text":"impl Clone for Windows949Encoder","synthetic":false,"types":[]},{"text":"impl Clone for EUCJPEncoding","synthetic":false,"types":[]},{"text":"impl Clone for EUCJPEncoder","synthetic":false,"types":[]},{"text":"impl Clone for Windows31JEncoding","synthetic":false,"types":[]},{"text":"impl Clone for Windows31JEncoder","synthetic":false,"types":[]},{"text":"impl Clone for ISO2022JPEncoding","synthetic":false,"types":[]},{"text":"impl Clone for ISO2022JPEncoder","synthetic":false,"types":[]},{"text":"impl Clone for GBK","synthetic":false,"types":[]},{"text":"impl Clone for GB18030","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for GBEncoding&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for GBEncoder&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for HZEncoding","synthetic":false,"types":[]},{"text":"impl Clone for HZEncoder","synthetic":false,"types":[]},{"text":"impl Clone for BigFive2003Encoding","synthetic":false,"types":[]},{"text":"impl Clone for BigFive2003Encoder","synthetic":false,"types":[]},{"text":"impl Clone for EncoderOnlyUTF8Encoding","synthetic":false,"types":[]}];
implementors["evmap"] = [{"text":"impl&lt;K, V, M, S&gt; Clone for ReadHandleFactory&lt;K, V, M, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Eq + Hash,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: BuildHasher,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;K, V, M, S&gt; Clone for ReadHandle&lt;K, V, M, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Eq + Hash,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: BuildHasher,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for CopyValue&lt;T&gt;","synthetic":false,"types":[]}];
implementors["form_urlencoded"] = [{"text":"impl&lt;'a&gt; Clone for Parse&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["futures_channel"] = [{"text":"impl Clone for SendError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for UnboundedSender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Canceled","synthetic":false,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;Fut&gt; Clone for Shared&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Future,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Pending&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone&gt; Clone for OptionFuture&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Ready&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone, B:&nbsp;Clone&gt; Clone for Either&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut:&nbsp;Clone&gt; Clone for Abortable&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl Clone for AbortHandle","synthetic":false,"types":[]},{"text":"impl Clone for Aborted","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Iter&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Repeat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone&gt; Clone for RepeatWith&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Empty&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Pending&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Si:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for SinkMapErr&lt;Si, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; Clone for With&lt;Si, Item, U, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Si: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for AllowStdIo&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Cursor&lt;T&gt;","synthetic":false,"types":[]}];
implementors["gettext"] = [{"text":"impl Clone for Catalog","synthetic":false,"types":[]}];
implementors["h2"] = [{"text":"impl Clone for Reason","synthetic":false,"types":[]},{"text":"impl Clone for Builder","synthetic":false,"types":[]},{"text":"impl&lt;B&gt; Clone for SendRequest&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Buf,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Builder","synthetic":false,"types":[]},{"text":"impl Clone for StreamId","synthetic":false,"types":[]},{"text":"impl Clone for FlowControl","synthetic":false,"types":[]}];
implementors["hashbrown"] = [{"text":"impl&lt;K:&nbsp;Clone, V:&nbsp;Clone, S:&nbsp;Clone&gt; Clone for HashMap&lt;K, V, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Clone for Iter&lt;'_, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Clone for Keys&lt;'_, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Clone for Values&lt;'_, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, S:&nbsp;Clone&gt; Clone for HashSet&lt;T, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K&gt; Clone for Iter&lt;'_, K&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Clone for Intersection&lt;'_, T, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Clone for Difference&lt;'_, T, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Clone for SymmetricDifference&lt;'_, T, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Clone for Union&lt;'_, T, S&gt;","synthetic":false,"types":[]},{"text":"impl Clone for CollectionAllocErr","synthetic":false,"types":[]}];
implementors["http"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for HeaderMap&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for HeaderName","synthetic":false,"types":[]},{"text":"impl Clone for HeaderValue","synthetic":false,"types":[]},{"text":"impl Clone for Method","synthetic":false,"types":[]},{"text":"impl Clone for StatusCode","synthetic":false,"types":[]},{"text":"impl Clone for Authority","synthetic":false,"types":[]},{"text":"impl Clone for PathAndQuery","synthetic":false,"types":[]},{"text":"impl Clone for Scheme","synthetic":false,"types":[]},{"text":"impl Clone for Uri","synthetic":false,"types":[]},{"text":"impl Clone for Version","synthetic":false,"types":[]}];
implementors["http_body"] = [{"text":"impl Clone for SizeHint","synthetic":false,"types":[]}];
implementors["httparse"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Status&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Header&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["httpdate"] = [{"text":"impl Clone for HttpDate","synthetic":false,"types":[]}];
implementors["hyper"] = [{"text":"impl Clone for Name","synthetic":false,"types":[]},{"text":"impl Clone for GaiResolver","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone&gt; Clone for HttpConnector&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl Clone for HttpInfo","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Clone, B&gt; Clone for Client&lt;C, B&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Builder","synthetic":false,"types":[]},{"text":"impl Clone for Builder","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Clone&gt; Clone for Http&lt;E&gt;","synthetic":false,"types":[]}];
implementors["hyper_rustls"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for HttpsConnector&lt;T&gt;","synthetic":false,"types":[]}];
implementors["idna"] = [{"text":"impl Clone for Config","synthetic":false,"types":[]}];
implementors["indexmap"] = [{"text":"impl&lt;K, V, S&gt; Clone for IndexMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Clone for Keys&lt;'_, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Clone for Values&lt;'_, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Clone for Iter&lt;'_, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Clone for IndexSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Iter&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Clone for Difference&lt;'_, T, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Clone for Intersection&lt;'_, T, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S1, S2&gt; Clone for SymmetricDifference&lt;'_, T, S1, S2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Clone for Union&lt;'_, T, S&gt;","synthetic":false,"types":[]}];
implementors["ipnet"] = [{"text":"impl Clone for IpAddrRange","synthetic":false,"types":[]},{"text":"impl Clone for Ipv4AddrRange","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6AddrRange","synthetic":false,"types":[]},{"text":"impl Clone for IpNet","synthetic":false,"types":[]},{"text":"impl Clone for Ipv4Net","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6Net","synthetic":false,"types":[]},{"text":"impl Clone for PrefixLenError","synthetic":false,"types":[]},{"text":"impl Clone for IpSubnets","synthetic":false,"types":[]},{"text":"impl Clone for Ipv4Subnets","synthetic":false,"types":[]},{"text":"impl Clone for Ipv6Subnets","synthetic":false,"types":[]},{"text":"impl Clone for AddrParseError","synthetic":false,"types":[]}];
implementors["itoa"] = [{"text":"impl Clone for Buffer","synthetic":false,"types":[]}];
implementors["libc"] = [{"text":"impl Clone for DIR","synthetic":false,"types":[]},{"text":"impl Clone for group","synthetic":false,"types":[]},{"text":"impl Clone for utimbuf","synthetic":false,"types":[]},{"text":"impl Clone for timeval","synthetic":false,"types":[]},{"text":"impl Clone for timespec","synthetic":false,"types":[]},{"text":"impl Clone for rlimit","synthetic":false,"types":[]},{"text":"impl Clone for rusage","synthetic":false,"types":[]},{"text":"impl Clone for ipv6_mreq","synthetic":false,"types":[]},{"text":"impl Clone for hostent","synthetic":false,"types":[]},{"text":"impl Clone for iovec","synthetic":false,"types":[]},{"text":"impl Clone for pollfd","synthetic":false,"types":[]},{"text":"impl Clone for winsize","synthetic":false,"types":[]},{"text":"impl Clone for linger","synthetic":false,"types":[]},{"text":"impl Clone for sigval","synthetic":false,"types":[]},{"text":"impl Clone for itimerval","synthetic":false,"types":[]},{"text":"impl Clone for tms","synthetic":false,"types":[]},{"text":"impl Clone for servent","synthetic":false,"types":[]},{"text":"impl Clone for protoent","synthetic":false,"types":[]},{"text":"impl Clone for FILE","synthetic":false,"types":[]},{"text":"impl Clone for fpos_t","synthetic":false,"types":[]},{"text":"impl Clone for timezone","synthetic":false,"types":[]},{"text":"impl Clone for in_addr","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreq","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreq_source","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_in","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_in6","synthetic":false,"types":[]},{"text":"impl Clone for addrinfo","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_ll","synthetic":false,"types":[]},{"text":"impl Clone for fd_set","synthetic":false,"types":[]},{"text":"impl Clone for tm","synthetic":false,"types":[]},{"text":"impl Clone for sched_param","synthetic":false,"types":[]},{"text":"impl Clone for Dl_info","synthetic":false,"types":[]},{"text":"impl Clone for lconv","synthetic":false,"types":[]},{"text":"impl Clone for in_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for ifaddrs","synthetic":false,"types":[]},{"text":"impl Clone for in6_rtmsg","synthetic":false,"types":[]},{"text":"impl Clone for arpreq","synthetic":false,"types":[]},{"text":"impl Clone for arpreq_old","synthetic":false,"types":[]},{"text":"impl Clone for arphdr","synthetic":false,"types":[]},{"text":"impl Clone for mmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for epoll_event","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_un","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_storage","synthetic":false,"types":[]},{"text":"impl Clone for utsname","synthetic":false,"types":[]},{"text":"impl Clone for sigevent","synthetic":false,"types":[]},{"text":"impl Clone for fpos64_t","synthetic":false,"types":[]},{"text":"impl Clone for rlimit64","synthetic":false,"types":[]},{"text":"impl Clone for glob_t","synthetic":false,"types":[]},{"text":"impl Clone for passwd","synthetic":false,"types":[]},{"text":"impl Clone for spwd","synthetic":false,"types":[]},{"text":"impl Clone for dqblk","synthetic":false,"types":[]},{"text":"impl Clone for signalfd_siginfo","synthetic":false,"types":[]},{"text":"impl Clone for itimerspec","synthetic":false,"types":[]},{"text":"impl Clone for fsid_t","synthetic":false,"types":[]},{"text":"impl Clone for packet_mreq","synthetic":false,"types":[]},{"text":"impl Clone for cpu_set_t","synthetic":false,"types":[]},{"text":"impl Clone for if_nameindex","synthetic":false,"types":[]},{"text":"impl Clone for msginfo","synthetic":false,"types":[]},{"text":"impl Clone for sembuf","synthetic":false,"types":[]},{"text":"impl Clone for input_event","synthetic":false,"types":[]},{"text":"impl Clone for input_id","synthetic":false,"types":[]},{"text":"impl Clone for input_absinfo","synthetic":false,"types":[]},{"text":"impl Clone for input_keymap_entry","synthetic":false,"types":[]},{"text":"impl Clone for input_mask","synthetic":false,"types":[]},{"text":"impl Clone for ff_replay","synthetic":false,"types":[]},{"text":"impl Clone for ff_trigger","synthetic":false,"types":[]},{"text":"impl Clone for ff_envelope","synthetic":false,"types":[]},{"text":"impl Clone for ff_constant_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_ramp_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_condition_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_periodic_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_rumble_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_effect","synthetic":false,"types":[]},{"text":"impl Clone for dl_phdr_info","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Ehdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Ehdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Sym","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Sym","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Phdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Phdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Shdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Shdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Chdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Chdr","synthetic":false,"types":[]},{"text":"impl Clone for ucred","synthetic":false,"types":[]},{"text":"impl Clone for mntent","synthetic":false,"types":[]},{"text":"impl Clone for posix_spawn_file_actions_t","synthetic":false,"types":[]},{"text":"impl Clone for posix_spawnattr_t","synthetic":false,"types":[]},{"text":"impl Clone for genlmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for in6_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for arpd_request","synthetic":false,"types":[]},{"text":"impl Clone for inotify_event","synthetic":false,"types":[]},{"text":"impl Clone for fanotify_response","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_vm","synthetic":false,"types":[]},{"text":"impl Clone for regmatch_t","synthetic":false,"types":[]},{"text":"impl Clone for sock_extended_err","synthetic":false,"types":[]},{"text":"impl Clone for __c_anonymous_sockaddr_can_tp","synthetic":false,"types":[]},{"text":"impl Clone for __c_anonymous_sockaddr_can_j1939","synthetic":false,"types":[]},{"text":"impl Clone for can_filter","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_nl","synthetic":false,"types":[]},{"text":"impl Clone for dirent","synthetic":false,"types":[]},{"text":"impl Clone for dirent64","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_alg","synthetic":false,"types":[]},{"text":"impl Clone for af_alg_iv","synthetic":false,"types":[]},{"text":"impl Clone for mq_attr","synthetic":false,"types":[]},{"text":"impl Clone for __c_anonymous_sockaddr_can_can_addr","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_can","synthetic":false,"types":[]},{"text":"impl Clone for statx","synthetic":false,"types":[]},{"text":"impl Clone for statx_timestamp","synthetic":false,"types":[]},{"text":"impl Clone for aiocb","synthetic":false,"types":[]},{"text":"impl Clone for __exit_status","synthetic":false,"types":[]},{"text":"impl Clone for __timeval","synthetic":false,"types":[]},{"text":"impl Clone for glob64_t","synthetic":false,"types":[]},{"text":"impl Clone for msghdr","synthetic":false,"types":[]},{"text":"impl Clone for cmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for termios","synthetic":false,"types":[]},{"text":"impl Clone for mallinfo","synthetic":false,"types":[]},{"text":"impl Clone for nlmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for nlmsgerr","synthetic":false,"types":[]},{"text":"impl Clone for nl_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for nl_mmap_req","synthetic":false,"types":[]},{"text":"impl Clone for nl_mmap_hdr","synthetic":false,"types":[]},{"text":"impl Clone for nlattr","synthetic":false,"types":[]},{"text":"impl Clone for rtentry","synthetic":false,"types":[]},{"text":"impl Clone for timex","synthetic":false,"types":[]},{"text":"impl Clone for ntptimeval","synthetic":false,"types":[]},{"text":"impl Clone for regex_t","synthetic":false,"types":[]},{"text":"impl Clone for utmpx","synthetic":false,"types":[]},{"text":"impl Clone for sigset_t","synthetic":false,"types":[]},{"text":"impl Clone for sysinfo","synthetic":false,"types":[]},{"text":"impl Clone for msqid_ds","synthetic":false,"types":[]},{"text":"impl Clone for sigaction","synthetic":false,"types":[]},{"text":"impl Clone for statfs","synthetic":false,"types":[]},{"text":"impl Clone for flock","synthetic":false,"types":[]},{"text":"impl Clone for flock64","synthetic":false,"types":[]},{"text":"impl Clone for siginfo_t","synthetic":false,"types":[]},{"text":"impl Clone for stack_t","synthetic":false,"types":[]},{"text":"impl Clone for stat","synthetic":false,"types":[]},{"text":"impl Clone for stat64","synthetic":false,"types":[]},{"text":"impl Clone for statfs64","synthetic":false,"types":[]},{"text":"impl Clone for statvfs64","synthetic":false,"types":[]},{"text":"impl Clone for pthread_attr_t","synthetic":false,"types":[]},{"text":"impl Clone for _libc_fpxreg","synthetic":false,"types":[]},{"text":"impl Clone for _libc_xmmreg","synthetic":false,"types":[]},{"text":"impl Clone for _libc_fpstate","synthetic":false,"types":[]},{"text":"impl Clone for user_regs_struct","synthetic":false,"types":[]},{"text":"impl Clone for user","synthetic":false,"types":[]},{"text":"impl Clone for mcontext_t","synthetic":false,"types":[]},{"text":"impl Clone for ipc_perm","synthetic":false,"types":[]},{"text":"impl Clone for shmid_ds","synthetic":false,"types":[]},{"text":"impl Clone for termios2","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreqn","synthetic":false,"types":[]},{"text":"impl Clone for user_fpregs_struct","synthetic":false,"types":[]},{"text":"impl Clone for ucontext_t","synthetic":false,"types":[]},{"text":"impl Clone for statvfs","synthetic":false,"types":[]},{"text":"impl Clone for max_align_t","synthetic":false,"types":[]},{"text":"impl Clone for sem_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_mutexattr_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_rwlockattr_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_condattr_t","synthetic":false,"types":[]},{"text":"impl Clone for fanotify_event_metadata","synthetic":false,"types":[]},{"text":"impl Clone for pthread_cond_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_mutex_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_rwlock_t","synthetic":false,"types":[]},{"text":"impl Clone for can_frame","synthetic":false,"types":[]},{"text":"impl Clone for canfd_frame","synthetic":false,"types":[]},{"text":"impl Clone for in6_addr","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Clone for Level","synthetic":false,"types":[]},{"text":"impl Clone for LevelFilter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Record&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Metadata&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["mime"] = [{"text":"impl Clone for Mime","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Name&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["mime_guess"] = [{"text":"impl Clone for MimeGuess","synthetic":false,"types":[]},{"text":"impl Clone for Iter","synthetic":false,"types":[]},{"text":"impl Clone for IterRaw","synthetic":false,"types":[]}];
implementors["mio"] = [{"text":"impl Clone for Interest","synthetic":false,"types":[]},{"text":"impl Clone for Token","synthetic":false,"types":[]},{"text":"impl Clone for Event","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Iter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for TcpKeepalive","synthetic":false,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for OnceCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for OnceCell&lt;T&gt;","synthetic":false,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Clone for WaitTimeoutResult","synthetic":false,"types":[]},{"text":"impl Clone for OnceState","synthetic":false,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Clone for ParkResult","synthetic":false,"types":[]},{"text":"impl Clone for UnparkResult","synthetic":false,"types":[]},{"text":"impl Clone for RequeueOp","synthetic":false,"types":[]},{"text":"impl Clone for FilterOp","synthetic":false,"types":[]},{"text":"impl Clone for UnparkToken","synthetic":false,"types":[]},{"text":"impl Clone for ParkToken","synthetic":false,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl&lt;'a&gt; Clone for PercentEncode&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for PercentDecode&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Clone for TokenStream","synthetic":false,"types":[]},{"text":"impl Clone for Span","synthetic":false,"types":[]},{"text":"impl Clone for TokenTree","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl Clone for Delimiter","synthetic":false,"types":[]},{"text":"impl Clone for Punct","synthetic":false,"types":[]},{"text":"impl Clone for Spacing","synthetic":false,"types":[]},{"text":"impl Clone for Ident","synthetic":false,"types":[]},{"text":"impl Clone for Literal","synthetic":false,"types":[]},{"text":"impl Clone for IntoIter","synthetic":false,"types":[]}];
implementors["ratelimit_meter"] = [{"text":"impl&lt;P:&nbsp;Clone + Reference&gt; Clone for State&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone + Reference&gt; Clone for GCRA&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone + Reference&gt; Clone for LeakyBucket&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Clone + Reference&gt; Clone for State&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl Clone for FakeRelativeClock","synthetic":false,"types":[]},{"text":"impl Clone for FakeAbsoluteClock","synthetic":false,"types":[]},{"text":"impl Clone for MonotonicClock","synthetic":false,"types":[]},{"text":"impl Clone for SystemClock","synthetic":false,"types":[]},{"text":"impl Clone for Allower","synthetic":false,"types":[]},{"text":"impl Clone for Always","synthetic":false,"types":[]},{"text":"impl Clone for ForeverClock","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone + Algorithm&lt;C::Instant&gt;, C:&nbsp;Clone + Clock&gt; Clone for DirectRateLimiter&lt;A, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::BucketState: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;K:&nbsp;Clone + Eq + Hash, A:&nbsp;Clone + Algorithm&lt;C::Instant&gt;, C:&nbsp;Clone + Clock, H:&nbsp;Clone + BuildHasher&gt; Clone for KeyedRateLimiter&lt;K, A, C, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::BucketState: KeyableRateLimitState&lt;A, C::Instant&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;A::BucketState: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["redis"] = [{"text":"impl Clone for MultiplexedConnection","synthetic":false,"types":[]},{"text":"impl Clone for StreamMaxlen","synthetic":false,"types":[]},{"text":"impl Clone for StreamReadReply","synthetic":false,"types":[]},{"text":"impl Clone for StreamRangeReply","synthetic":false,"types":[]},{"text":"impl Clone for StreamClaimReply","synthetic":false,"types":[]},{"text":"impl Clone for StreamPendingReply","synthetic":false,"types":[]},{"text":"impl Clone for StreamPendingData","synthetic":false,"types":[]},{"text":"impl Clone for StreamPendingCountReply","synthetic":false,"types":[]},{"text":"impl Clone for StreamInfoStreamReply","synthetic":false,"types":[]},{"text":"impl Clone for StreamInfoConsumersReply","synthetic":false,"types":[]},{"text":"impl Clone for StreamInfoGroupsReply","synthetic":false,"types":[]},{"text":"impl Clone for StreamInfoConsumer","synthetic":false,"types":[]},{"text":"impl Clone for StreamInfoGroup","synthetic":false,"types":[]},{"text":"impl Clone for StreamPendingId","synthetic":false,"types":[]},{"text":"impl Clone for StreamKey","synthetic":false,"types":[]},{"text":"impl Clone for StreamId","synthetic":false,"types":[]},{"text":"impl Clone for Client","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Clone&gt; Clone for Arg&lt;D&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Cmd","synthetic":false,"types":[]},{"text":"impl Clone for Pipeline","synthetic":false,"types":[]},{"text":"impl Clone for ConnectionAddr","synthetic":false,"types":[]},{"text":"impl Clone for ConnectionInfo","synthetic":false,"types":[]},{"text":"impl Clone for Script","synthetic":false,"types":[]},{"text":"impl Clone for NumericBehavior","synthetic":false,"types":[]},{"text":"impl Clone for ErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for Value","synthetic":false,"types":[]}];
implementors["regex"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;'t&gt; Clone for Match&lt;'t&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Regex","synthetic":false,"types":[]},{"text":"impl&lt;'r&gt; Clone for CaptureNames&lt;'r&gt;","synthetic":false,"types":[]},{"text":"impl Clone for CaptureLocations","synthetic":false,"types":[]},{"text":"impl&lt;'c, 't: 'c&gt; Clone for SubCaptureMatches&lt;'c, 't&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'t&gt; Clone for NoExpand&lt;'t&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RegexSet","synthetic":false,"types":[]},{"text":"impl Clone for SetMatches","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for SetMatchesIter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RegexSet","synthetic":false,"types":[]},{"text":"impl Clone for SetMatches","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for SetMatchesIter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'t&gt; Clone for Match&lt;'t&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Regex","synthetic":false,"types":[]},{"text":"impl&lt;'r&gt; Clone for CaptureNames&lt;'r&gt;","synthetic":false,"types":[]},{"text":"impl Clone for CaptureLocations","synthetic":false,"types":[]},{"text":"impl&lt;'c, 't: 'c&gt; Clone for SubCaptureMatches&lt;'c, 't&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'t&gt; Clone for NoExpand&lt;'t&gt;","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Clone for ParserBuilder","synthetic":false,"types":[]},{"text":"impl Clone for Parser","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for Span","synthetic":false,"types":[]},{"text":"impl Clone for Position","synthetic":false,"types":[]},{"text":"impl Clone for WithComments","synthetic":false,"types":[]},{"text":"impl Clone for Comment","synthetic":false,"types":[]},{"text":"impl Clone for Ast","synthetic":false,"types":[]},{"text":"impl Clone for Alternation","synthetic":false,"types":[]},{"text":"impl Clone for Concat","synthetic":false,"types":[]},{"text":"impl Clone for Literal","synthetic":false,"types":[]},{"text":"impl Clone for LiteralKind","synthetic":false,"types":[]},{"text":"impl Clone for SpecialLiteralKind","synthetic":false,"types":[]},{"text":"impl Clone for HexLiteralKind","synthetic":false,"types":[]},{"text":"impl Clone for Class","synthetic":false,"types":[]},{"text":"impl Clone for ClassPerl","synthetic":false,"types":[]},{"text":"impl Clone for ClassPerlKind","synthetic":false,"types":[]},{"text":"impl Clone for ClassAscii","synthetic":false,"types":[]},{"text":"impl Clone for ClassAsciiKind","synthetic":false,"types":[]},{"text":"impl Clone for ClassUnicode","synthetic":false,"types":[]},{"text":"impl Clone for ClassUnicodeKind","synthetic":false,"types":[]},{"text":"impl Clone for ClassUnicodeOpKind","synthetic":false,"types":[]},{"text":"impl Clone for ClassBracketed","synthetic":false,"types":[]},{"text":"impl Clone for ClassSet","synthetic":false,"types":[]},{"text":"impl Clone for ClassSetItem","synthetic":false,"types":[]},{"text":"impl Clone for ClassSetRange","synthetic":false,"types":[]},{"text":"impl Clone for ClassSetUnion","synthetic":false,"types":[]},{"text":"impl Clone for ClassSetBinaryOp","synthetic":false,"types":[]},{"text":"impl Clone for ClassSetBinaryOpKind","synthetic":false,"types":[]},{"text":"impl Clone for Assertion","synthetic":false,"types":[]},{"text":"impl Clone for AssertionKind","synthetic":false,"types":[]},{"text":"impl Clone for Repetition","synthetic":false,"types":[]},{"text":"impl Clone for RepetitionOp","synthetic":false,"types":[]},{"text":"impl Clone for RepetitionKind","synthetic":false,"types":[]},{"text":"impl Clone for RepetitionRange","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl Clone for GroupKind","synthetic":false,"types":[]},{"text":"impl Clone for CaptureName","synthetic":false,"types":[]},{"text":"impl Clone for SetFlags","synthetic":false,"types":[]},{"text":"impl Clone for Flags","synthetic":false,"types":[]},{"text":"impl Clone for FlagsItem","synthetic":false,"types":[]},{"text":"impl Clone for FlagsItemKind","synthetic":false,"types":[]},{"text":"impl Clone for Flag","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Literals","synthetic":false,"types":[]},{"text":"impl Clone for Literal","synthetic":false,"types":[]},{"text":"impl Clone for TranslatorBuilder","synthetic":false,"types":[]},{"text":"impl Clone for Translator","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for Hir","synthetic":false,"types":[]},{"text":"impl Clone for HirKind","synthetic":false,"types":[]},{"text":"impl Clone for Literal","synthetic":false,"types":[]},{"text":"impl Clone for Class","synthetic":false,"types":[]},{"text":"impl Clone for ClassUnicode","synthetic":false,"types":[]},{"text":"impl Clone for ClassUnicodeRange","synthetic":false,"types":[]},{"text":"impl Clone for ClassBytes","synthetic":false,"types":[]},{"text":"impl Clone for ClassBytesRange","synthetic":false,"types":[]},{"text":"impl Clone for Anchor","synthetic":false,"types":[]},{"text":"impl Clone for WordBoundary","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl Clone for GroupKind","synthetic":false,"types":[]},{"text":"impl Clone for Repetition","synthetic":false,"types":[]},{"text":"impl Clone for RepetitionKind","synthetic":false,"types":[]},{"text":"impl Clone for RepetitionRange","synthetic":false,"types":[]},{"text":"impl Clone for ParserBuilder","synthetic":false,"types":[]},{"text":"impl Clone for Parser","synthetic":false,"types":[]},{"text":"impl Clone for Utf8Sequence","synthetic":false,"types":[]},{"text":"impl Clone for Utf8Range","synthetic":false,"types":[]}];
implementors["reqwest"] = [{"text":"impl Clone for Client","synthetic":false,"types":[]},{"text":"impl Clone for Proxy","synthetic":false,"types":[]},{"text":"impl Clone for Certificate","synthetic":false,"types":[]}];
implementors["ring"] = [{"text":"impl Clone for PublicKey","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Clone&gt; Clone for UnparsedPublicKey&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: AsRef&lt;[u8]&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Positive&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Context","synthetic":false,"types":[]},{"text":"impl Clone for Digest","synthetic":false,"types":[]},{"text":"impl Clone for Unspecified","synthetic":false,"types":[]},{"text":"impl Clone for KeyRejected","synthetic":false,"types":[]},{"text":"impl Clone for Algorithm","synthetic":false,"types":[]},{"text":"impl Clone for Prk","synthetic":false,"types":[]},{"text":"impl Clone for Algorithm","synthetic":false,"types":[]},{"text":"impl Clone for Tag","synthetic":false,"types":[]},{"text":"impl Clone for Key","synthetic":false,"types":[]},{"text":"impl Clone for Context","synthetic":false,"types":[]},{"text":"impl Clone for Algorithm","synthetic":false,"types":[]},{"text":"impl Clone for SystemRandom","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Clone&gt; Clone for RsaPublicKeyComponents&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: AsRef&lt;[u8]&gt; + Debug,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for RsaSubjectPublicKey","synthetic":false,"types":[]},{"text":"impl Clone for Signature","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Clone&gt; Clone for UnparsedPublicKey&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: AsRef&lt;[u8]&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["rustls"] = [{"text":"impl Clone for Payload","synthetic":false,"types":[]},{"text":"impl Clone for PayloadU24","synthetic":false,"types":[]},{"text":"impl Clone for PayloadU16","synthetic":false,"types":[]},{"text":"impl Clone for PayloadU8","synthetic":false,"types":[]},{"text":"impl Clone for ProtocolVersion","synthetic":false,"types":[]},{"text":"impl Clone for HashAlgorithm","synthetic":false,"types":[]},{"text":"impl Clone for SignatureAlgorithm","synthetic":false,"types":[]},{"text":"impl Clone for ClientCertificateType","synthetic":false,"types":[]},{"text":"impl Clone for Compression","synthetic":false,"types":[]},{"text":"impl Clone for ContentType","synthetic":false,"types":[]},{"text":"impl Clone for HandshakeType","synthetic":false,"types":[]},{"text":"impl Clone for AlertLevel","synthetic":false,"types":[]},{"text":"impl Clone for AlertDescription","synthetic":false,"types":[]},{"text":"impl Clone for HeartbeatMessageType","synthetic":false,"types":[]},{"text":"impl Clone for ExtensionType","synthetic":false,"types":[]},{"text":"impl Clone for ServerNameType","synthetic":false,"types":[]},{"text":"impl Clone for NamedCurve","synthetic":false,"types":[]},{"text":"impl Clone for NamedGroup","synthetic":false,"types":[]},{"text":"impl Clone for CipherSuite","synthetic":false,"types":[]},{"text":"impl Clone for ECPointFormat","synthetic":false,"types":[]},{"text":"impl Clone for HeartbeatMode","synthetic":false,"types":[]},{"text":"impl Clone for ECCurveType","synthetic":false,"types":[]},{"text":"impl Clone for SignatureScheme","synthetic":false,"types":[]},{"text":"impl Clone for PSKKeyExchangeMode","synthetic":false,"types":[]},{"text":"impl Clone for KeyUpdateRequest","synthetic":false,"types":[]},{"text":"impl Clone for CertificateStatusType","synthetic":false,"types":[]},{"text":"impl Clone for Random","synthetic":false,"types":[]},{"text":"impl Clone for SessionID","synthetic":false,"types":[]},{"text":"impl Clone for UnknownExtension","synthetic":false,"types":[]},{"text":"impl Clone for ServerNamePayload","synthetic":false,"types":[]},{"text":"impl Clone for ServerName","synthetic":false,"types":[]},{"text":"impl Clone for KeyShareEntry","synthetic":false,"types":[]},{"text":"impl Clone for PresharedKeyIdentity","synthetic":false,"types":[]},{"text":"impl Clone for PresharedKeyOffer","synthetic":false,"types":[]},{"text":"impl Clone for OCSPCertificateStatusRequest","synthetic":false,"types":[]},{"text":"impl Clone for CertificateStatusRequest","synthetic":false,"types":[]},{"text":"impl Clone for ClientExtension","synthetic":false,"types":[]},{"text":"impl Clone for ServerExtension","synthetic":false,"types":[]},{"text":"impl Clone for DigitallySignedStruct","synthetic":false,"types":[]},{"text":"impl Clone for OwnedTrustAnchor","synthetic":false,"types":[]},{"text":"impl Clone for RootCertStore","synthetic":false,"types":[]},{"text":"impl Clone for TLSError","synthetic":false,"types":[]},{"text":"impl Clone for ClientConfig","synthetic":false,"types":[]},{"text":"impl Clone for PrivateKey","synthetic":false,"types":[]},{"text":"impl Clone for Certificate","synthetic":false,"types":[]},{"text":"impl Clone for ServerConfig","synthetic":false,"types":[]},{"text":"impl Clone for CertifiedKey","synthetic":false,"types":[]}];
implementors["ryu"] = [{"text":"impl Clone for Buffer","synthetic":false,"types":[]}];
implementors["sct"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["seance"] = [{"text":"impl&lt;B:&nbsp;Clone&gt; Clone for SessionManager&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;Clone&gt; Clone for Session&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl Clone for FilesystemBackend","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Clone&gt; Clone for RedisBackend&lt;C&gt;","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for UnitDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for BoolDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for IsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for UsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for F32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for F64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for CharDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for StrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for BorrowedStrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for StringDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, E&gt; Clone for CowStrDeserializer&lt;'a, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for BorrowedBytesDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, E:&nbsp;Clone&gt; Clone for SeqDeserializer&lt;I, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for SeqAccessDeserializer&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, I, E&gt; Clone for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Pair,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I::Item as Pair&gt;::Second: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for MapAccessDeserializer&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl Clone for IgnoredAny","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Unexpected&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Clone for Category","synthetic":false,"types":[]},{"text":"impl Clone for Map&lt;String, Value&gt;","synthetic":false,"types":[]},{"text":"impl Clone for CompactFormatter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for PrettyFormatter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Value","synthetic":false,"types":[]},{"text":"impl Clone for Number","synthetic":false,"types":[]}];
implementors["serde_urlencoded"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["sha1"] = [{"text":"impl Clone for Sha1","synthetic":false,"types":[]},{"text":"impl Clone for Digest","synthetic":false,"types":[]},{"text":"impl Clone for DigestParseError","synthetic":false,"types":[]}];
implementors["shellwords"] = [{"text":"impl Clone for MismatchedQuotes","synthetic":false,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Slab&lt;T&gt;","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Clone for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["snafu"] = [{"text":"impl Clone for UsualCase","synthetic":false,"types":[]},{"text":"impl Clone for UsedInTightLoop","synthetic":false,"types":[]},{"text":"impl Clone for SnafuErrorAsSource","synthetic":false,"types":[]},{"text":"impl Clone for SourceErrorDoesNotHaveBacktrace","synthetic":false,"types":[]},{"text":"impl&lt;__T0:&nbsp;Clone&gt; Clone for Leaf&lt;__T0&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Intermediate","synthetic":false,"types":[]}];
implementors["socket2"] = [{"text":"impl Clone for Domain","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Protocol","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Clone for Underscore","synthetic":false,"types":[]},{"text":"impl Clone for Abstract","synthetic":false,"types":[]},{"text":"impl Clone for As","synthetic":false,"types":[]},{"text":"impl Clone for Async","synthetic":false,"types":[]},{"text":"impl Clone for Auto","synthetic":false,"types":[]},{"text":"impl Clone for Await","synthetic":false,"types":[]},{"text":"impl Clone for Become","synthetic":false,"types":[]},{"text":"impl Clone for Box","synthetic":false,"types":[]},{"text":"impl Clone for Break","synthetic":false,"types":[]},{"text":"impl Clone for Const","synthetic":false,"types":[]},{"text":"impl Clone for Continue","synthetic":false,"types":[]},{"text":"impl Clone for Crate","synthetic":false,"types":[]},{"text":"impl Clone for Default","synthetic":false,"types":[]},{"text":"impl Clone for Do","synthetic":false,"types":[]},{"text":"impl Clone for Dyn","synthetic":false,"types":[]},{"text":"impl Clone for Else","synthetic":false,"types":[]},{"text":"impl Clone for Enum","synthetic":false,"types":[]},{"text":"impl Clone for Extern","synthetic":false,"types":[]},{"text":"impl Clone for Final","synthetic":false,"types":[]},{"text":"impl Clone for Fn","synthetic":false,"types":[]},{"text":"impl Clone for For","synthetic":false,"types":[]},{"text":"impl Clone for If","synthetic":false,"types":[]},{"text":"impl Clone for Impl","synthetic":false,"types":[]},{"text":"impl Clone for In","synthetic":false,"types":[]},{"text":"impl Clone for Let","synthetic":false,"types":[]},{"text":"impl Clone for Loop","synthetic":false,"types":[]},{"text":"impl Clone for Macro","synthetic":false,"types":[]},{"text":"impl Clone for Match","synthetic":false,"types":[]},{"text":"impl Clone for Mod","synthetic":false,"types":[]},{"text":"impl Clone for Move","synthetic":false,"types":[]},{"text":"impl Clone for Mut","synthetic":false,"types":[]},{"text":"impl Clone for Override","synthetic":false,"types":[]},{"text":"impl Clone for Priv","synthetic":false,"types":[]},{"text":"impl Clone for Pub","synthetic":false,"types":[]},{"text":"impl Clone for Ref","synthetic":false,"types":[]},{"text":"impl Clone for Return","synthetic":false,"types":[]},{"text":"impl Clone for SelfType","synthetic":false,"types":[]},{"text":"impl Clone for SelfValue","synthetic":false,"types":[]},{"text":"impl Clone for Static","synthetic":false,"types":[]},{"text":"impl Clone for Struct","synthetic":false,"types":[]},{"text":"impl Clone for Super","synthetic":false,"types":[]},{"text":"impl Clone for Trait","synthetic":false,"types":[]},{"text":"impl Clone for Try","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Typeof","synthetic":false,"types":[]},{"text":"impl Clone for Union","synthetic":false,"types":[]},{"text":"impl Clone for Unsafe","synthetic":false,"types":[]},{"text":"impl Clone for Unsized","synthetic":false,"types":[]},{"text":"impl Clone for Use","synthetic":false,"types":[]},{"text":"impl Clone for Virtual","synthetic":false,"types":[]},{"text":"impl Clone for Where","synthetic":false,"types":[]},{"text":"impl Clone for While","synthetic":false,"types":[]},{"text":"impl Clone for Yield","synthetic":false,"types":[]},{"text":"impl Clone for Add","synthetic":false,"types":[]},{"text":"impl Clone for AddEq","synthetic":false,"types":[]},{"text":"impl Clone for And","synthetic":false,"types":[]},{"text":"impl Clone for AndAnd","synthetic":false,"types":[]},{"text":"impl Clone for AndEq","synthetic":false,"types":[]},{"text":"impl Clone for At","synthetic":false,"types":[]},{"text":"impl Clone for Bang","synthetic":false,"types":[]},{"text":"impl Clone for Caret","synthetic":false,"types":[]},{"text":"impl Clone for CaretEq","synthetic":false,"types":[]},{"text":"impl Clone for Colon","synthetic":false,"types":[]},{"text":"impl Clone for Colon2","synthetic":false,"types":[]},{"text":"impl Clone for Comma","synthetic":false,"types":[]},{"text":"impl Clone for Div","synthetic":false,"types":[]},{"text":"impl Clone for DivEq","synthetic":false,"types":[]},{"text":"impl Clone for Dollar","synthetic":false,"types":[]},{"text":"impl Clone for Dot","synthetic":false,"types":[]},{"text":"impl Clone for Dot2","synthetic":false,"types":[]},{"text":"impl Clone for Dot3","synthetic":false,"types":[]},{"text":"impl Clone for DotDotEq","synthetic":false,"types":[]},{"text":"impl Clone for Eq","synthetic":false,"types":[]},{"text":"impl Clone for EqEq","synthetic":false,"types":[]},{"text":"impl Clone for Ge","synthetic":false,"types":[]},{"text":"impl Clone for Gt","synthetic":false,"types":[]},{"text":"impl Clone for Le","synthetic":false,"types":[]},{"text":"impl Clone for Lt","synthetic":false,"types":[]},{"text":"impl Clone for MulEq","synthetic":false,"types":[]},{"text":"impl Clone for Ne","synthetic":false,"types":[]},{"text":"impl Clone for Or","synthetic":false,"types":[]},{"text":"impl Clone for OrEq","synthetic":false,"types":[]},{"text":"impl Clone for OrOr","synthetic":false,"types":[]},{"text":"impl Clone for Pound","synthetic":false,"types":[]},{"text":"impl Clone for Question","synthetic":false,"types":[]},{"text":"impl Clone for RArrow","synthetic":false,"types":[]},{"text":"impl Clone for LArrow","synthetic":false,"types":[]},{"text":"impl Clone for Rem","synthetic":false,"types":[]},{"text":"impl Clone for RemEq","synthetic":false,"types":[]},{"text":"impl Clone for FatArrow","synthetic":false,"types":[]},{"text":"impl Clone for Semi","synthetic":false,"types":[]},{"text":"impl Clone for Shl","synthetic":false,"types":[]},{"text":"impl Clone for ShlEq","synthetic":false,"types":[]},{"text":"impl Clone for Shr","synthetic":false,"types":[]},{"text":"impl Clone for ShrEq","synthetic":false,"types":[]},{"text":"impl Clone for Star","synthetic":false,"types":[]},{"text":"impl Clone for Sub","synthetic":false,"types":[]},{"text":"impl Clone for SubEq","synthetic":false,"types":[]},{"text":"impl Clone for Tilde","synthetic":false,"types":[]},{"text":"impl Clone for Brace","synthetic":false,"types":[]},{"text":"impl Clone for Bracket","synthetic":false,"types":[]},{"text":"impl Clone for Paren","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ImplGenerics&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for TypeGenerics&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Turbofish&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Lifetime","synthetic":false,"types":[]},{"text":"impl Clone for LitStr","synthetic":false,"types":[]},{"text":"impl Clone for LitByteStr","synthetic":false,"types":[]},{"text":"impl Clone for LitByte","synthetic":false,"types":[]},{"text":"impl Clone for LitChar","synthetic":false,"types":[]},{"text":"impl Clone for LitInt","synthetic":false,"types":[]},{"text":"impl Clone for LitFloat","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Cursor&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T, P&gt; Clone for Pairs&lt;'a, T, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Abi","synthetic":false,"types":[]},{"text":"impl Clone for AngleBracketedGenericArguments","synthetic":false,"types":[]},{"text":"impl Clone for Arm","synthetic":false,"types":[]},{"text":"impl Clone for AttrStyle","synthetic":false,"types":[]},{"text":"impl Clone for Attribute","synthetic":false,"types":[]},{"text":"impl Clone for BareFnArg","synthetic":false,"types":[]},{"text":"impl Clone for BinOp","synthetic":false,"types":[]},{"text":"impl Clone for Binding","synthetic":false,"types":[]},{"text":"impl Clone for Block","synthetic":false,"types":[]},{"text":"impl Clone for BoundLifetimes","synthetic":false,"types":[]},{"text":"impl Clone for ConstParam","synthetic":false,"types":[]},{"text":"impl Clone for Constraint","synthetic":false,"types":[]},{"text":"impl Clone for Data","synthetic":false,"types":[]},{"text":"impl Clone for DataEnum","synthetic":false,"types":[]},{"text":"impl Clone for DataStruct","synthetic":false,"types":[]},{"text":"impl Clone for DataUnion","synthetic":false,"types":[]},{"text":"impl Clone for DeriveInput","synthetic":false,"types":[]},{"text":"impl Clone for Expr","synthetic":false,"types":[]},{"text":"impl Clone for ExprArray","synthetic":false,"types":[]},{"text":"impl Clone for ExprAssign","synthetic":false,"types":[]},{"text":"impl Clone for ExprAssignOp","synthetic":false,"types":[]},{"text":"impl Clone for ExprAsync","synthetic":false,"types":[]},{"text":"impl Clone for ExprAwait","synthetic":false,"types":[]},{"text":"impl Clone for ExprBinary","synthetic":false,"types":[]},{"text":"impl Clone for ExprBlock","synthetic":false,"types":[]},{"text":"impl Clone for ExprBox","synthetic":false,"types":[]},{"text":"impl Clone for ExprBreak","synthetic":false,"types":[]},{"text":"impl Clone for ExprCall","synthetic":false,"types":[]},{"text":"impl Clone for ExprCast","synthetic":false,"types":[]},{"text":"impl Clone for ExprClosure","synthetic":false,"types":[]},{"text":"impl Clone for ExprContinue","synthetic":false,"types":[]},{"text":"impl Clone for ExprField","synthetic":false,"types":[]},{"text":"impl Clone for ExprForLoop","synthetic":false,"types":[]},{"text":"impl Clone for ExprGroup","synthetic":false,"types":[]},{"text":"impl Clone for ExprIf","synthetic":false,"types":[]},{"text":"impl Clone for ExprIndex","synthetic":false,"types":[]},{"text":"impl Clone for ExprLet","synthetic":false,"types":[]},{"text":"impl Clone for ExprLit","synthetic":false,"types":[]},{"text":"impl Clone for ExprLoop","synthetic":false,"types":[]},{"text":"impl Clone for ExprMacro","synthetic":false,"types":[]},{"text":"impl Clone for ExprMatch","synthetic":false,"types":[]},{"text":"impl Clone for ExprMethodCall","synthetic":false,"types":[]},{"text":"impl Clone for ExprParen","synthetic":false,"types":[]},{"text":"impl Clone for ExprPath","synthetic":false,"types":[]},{"text":"impl Clone for ExprRange","synthetic":false,"types":[]},{"text":"impl Clone for ExprReference","synthetic":false,"types":[]},{"text":"impl Clone for ExprRepeat","synthetic":false,"types":[]},{"text":"impl Clone for ExprReturn","synthetic":false,"types":[]},{"text":"impl Clone for ExprStruct","synthetic":false,"types":[]},{"text":"impl Clone for ExprTry","synthetic":false,"types":[]},{"text":"impl Clone for ExprTryBlock","synthetic":false,"types":[]},{"text":"impl Clone for ExprTuple","synthetic":false,"types":[]},{"text":"impl Clone for ExprType","synthetic":false,"types":[]},{"text":"impl Clone for ExprUnary","synthetic":false,"types":[]},{"text":"impl Clone for ExprUnsafe","synthetic":false,"types":[]},{"text":"impl Clone for ExprWhile","synthetic":false,"types":[]},{"text":"impl Clone for ExprYield","synthetic":false,"types":[]},{"text":"impl Clone for Field","synthetic":false,"types":[]},{"text":"impl Clone for FieldPat","synthetic":false,"types":[]},{"text":"impl Clone for FieldValue","synthetic":false,"types":[]},{"text":"impl Clone for Fields","synthetic":false,"types":[]},{"text":"impl Clone for FieldsNamed","synthetic":false,"types":[]},{"text":"impl Clone for FieldsUnnamed","synthetic":false,"types":[]},{"text":"impl Clone for File","synthetic":false,"types":[]},{"text":"impl Clone for FnArg","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItem","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemFn","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemStatic","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemType","synthetic":false,"types":[]},{"text":"impl Clone for GenericArgument","synthetic":false,"types":[]},{"text":"impl Clone for GenericMethodArgument","synthetic":false,"types":[]},{"text":"impl Clone for GenericParam","synthetic":false,"types":[]},{"text":"impl Clone for Generics","synthetic":false,"types":[]},{"text":"impl Clone for ImplItem","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemConst","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemMethod","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemType","synthetic":false,"types":[]},{"text":"impl Clone for Index","synthetic":false,"types":[]},{"text":"impl Clone for Item","synthetic":false,"types":[]},{"text":"impl Clone for ItemConst","synthetic":false,"types":[]},{"text":"impl Clone for ItemEnum","synthetic":false,"types":[]},{"text":"impl Clone for ItemExternCrate","synthetic":false,"types":[]},{"text":"impl Clone for ItemFn","synthetic":false,"types":[]},{"text":"impl Clone for ItemForeignMod","synthetic":false,"types":[]},{"text":"impl Clone for ItemImpl","synthetic":false,"types":[]},{"text":"impl Clone for ItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for ItemMacro2","synthetic":false,"types":[]},{"text":"impl Clone for ItemMod","synthetic":false,"types":[]},{"text":"impl Clone for ItemStatic","synthetic":false,"types":[]},{"text":"impl Clone for ItemStruct","synthetic":false,"types":[]},{"text":"impl Clone for ItemTrait","synthetic":false,"types":[]},{"text":"impl Clone for ItemTraitAlias","synthetic":false,"types":[]},{"text":"impl Clone for ItemType","synthetic":false,"types":[]},{"text":"impl Clone for ItemUnion","synthetic":false,"types":[]},{"text":"impl Clone for ItemUse","synthetic":false,"types":[]},{"text":"impl Clone for Label","synthetic":false,"types":[]},{"text":"impl Clone for LifetimeDef","synthetic":false,"types":[]},{"text":"impl Clone for Lit","synthetic":false,"types":[]},{"text":"impl Clone for LitBool","synthetic":false,"types":[]},{"text":"impl Clone for Local","synthetic":false,"types":[]},{"text":"impl Clone for Macro","synthetic":false,"types":[]},{"text":"impl Clone for MacroDelimiter","synthetic":false,"types":[]},{"text":"impl Clone for Member","synthetic":false,"types":[]},{"text":"impl Clone for Meta","synthetic":false,"types":[]},{"text":"impl Clone for MetaList","synthetic":false,"types":[]},{"text":"impl Clone for MetaNameValue","synthetic":false,"types":[]},{"text":"impl Clone for MethodTurbofish","synthetic":false,"types":[]},{"text":"impl Clone for NestedMeta","synthetic":false,"types":[]},{"text":"impl Clone for ParenthesizedGenericArguments","synthetic":false,"types":[]},{"text":"impl Clone for Pat","synthetic":false,"types":[]},{"text":"impl Clone for PatBox","synthetic":false,"types":[]},{"text":"impl Clone for PatIdent","synthetic":false,"types":[]},{"text":"impl Clone for PatLit","synthetic":false,"types":[]},{"text":"impl Clone for PatMacro","synthetic":false,"types":[]},{"text":"impl Clone for PatOr","synthetic":false,"types":[]},{"text":"impl Clone for PatPath","synthetic":false,"types":[]},{"text":"impl Clone for PatRange","synthetic":false,"types":[]},{"text":"impl Clone for PatReference","synthetic":false,"types":[]},{"text":"impl Clone for PatRest","synthetic":false,"types":[]},{"text":"impl Clone for PatSlice","synthetic":false,"types":[]},{"text":"impl Clone for PatStruct","synthetic":false,"types":[]},{"text":"impl Clone for PatTuple","synthetic":false,"types":[]},{"text":"impl Clone for PatTupleStruct","synthetic":false,"types":[]},{"text":"impl Clone for PatType","synthetic":false,"types":[]},{"text":"impl Clone for PatWild","synthetic":false,"types":[]},{"text":"impl Clone for Path","synthetic":false,"types":[]},{"text":"impl Clone for PathArguments","synthetic":false,"types":[]},{"text":"impl Clone for PathSegment","synthetic":false,"types":[]},{"text":"impl Clone for PredicateEq","synthetic":false,"types":[]},{"text":"impl Clone for PredicateLifetime","synthetic":false,"types":[]},{"text":"impl Clone for PredicateType","synthetic":false,"types":[]},{"text":"impl Clone for QSelf","synthetic":false,"types":[]},{"text":"impl Clone for RangeLimits","synthetic":false,"types":[]},{"text":"impl Clone for Receiver","synthetic":false,"types":[]},{"text":"impl Clone for ReturnType","synthetic":false,"types":[]},{"text":"impl Clone for Signature","synthetic":false,"types":[]},{"text":"impl Clone for Stmt","synthetic":false,"types":[]},{"text":"impl Clone for TraitBound","synthetic":false,"types":[]},{"text":"impl Clone for TraitBoundModifier","synthetic":false,"types":[]},{"text":"impl Clone for TraitItem","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemConst","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemMethod","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemType","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for TypeArray","synthetic":false,"types":[]},{"text":"impl Clone for TypeBareFn","synthetic":false,"types":[]},{"text":"impl Clone for TypeGroup","synthetic":false,"types":[]},{"text":"impl Clone for TypeImplTrait","synthetic":false,"types":[]},{"text":"impl Clone for TypeInfer","synthetic":false,"types":[]},{"text":"impl Clone for TypeMacro","synthetic":false,"types":[]},{"text":"impl Clone for TypeNever","synthetic":false,"types":[]},{"text":"impl Clone for TypeParam","synthetic":false,"types":[]},{"text":"impl Clone for TypeParamBound","synthetic":false,"types":[]},{"text":"impl Clone for TypeParen","synthetic":false,"types":[]},{"text":"impl Clone for TypePath","synthetic":false,"types":[]},{"text":"impl Clone for TypePtr","synthetic":false,"types":[]},{"text":"impl Clone for TypeReference","synthetic":false,"types":[]},{"text":"impl Clone for TypeSlice","synthetic":false,"types":[]},{"text":"impl Clone for TypeTraitObject","synthetic":false,"types":[]},{"text":"impl Clone for TypeTuple","synthetic":false,"types":[]},{"text":"impl Clone for UnOp","synthetic":false,"types":[]},{"text":"impl Clone for UseGlob","synthetic":false,"types":[]},{"text":"impl Clone for UseGroup","synthetic":false,"types":[]},{"text":"impl Clone for UseName","synthetic":false,"types":[]},{"text":"impl Clone for UsePath","synthetic":false,"types":[]},{"text":"impl Clone for UseRename","synthetic":false,"types":[]},{"text":"impl Clone for UseTree","synthetic":false,"types":[]},{"text":"impl Clone for Variadic","synthetic":false,"types":[]},{"text":"impl Clone for Variant","synthetic":false,"types":[]},{"text":"impl Clone for VisCrate","synthetic":false,"types":[]},{"text":"impl Clone for VisPublic","synthetic":false,"types":[]},{"text":"impl Clone for VisRestricted","synthetic":false,"types":[]},{"text":"impl Clone for Visibility","synthetic":false,"types":[]},{"text":"impl Clone for WhereClause","synthetic":false,"types":[]},{"text":"impl Clone for WherePredicate","synthetic":false,"types":[]},{"text":"impl&lt;'c, 'a&gt; Clone for StepCursor&lt;'c, 'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["tgbot"] = [{"text":"impl Clone for Config","synthetic":false,"types":[]},{"text":"impl Clone for Api","synthetic":false,"types":[]},{"text":"impl Clone for LongPollOptions","synthetic":false,"types":[]},{"text":"impl Clone for AnswerCallbackQuery","synthetic":false,"types":[]},{"text":"impl Clone for AnswerInlineQuery","synthetic":false,"types":[]},{"text":"impl Clone for AnswerPreCheckoutQuery","synthetic":false,"types":[]},{"text":"impl Clone for AnswerShippingQuery","synthetic":false,"types":[]},{"text":"impl Clone for DeleteChatPhoto","synthetic":false,"types":[]},{"text":"impl Clone for DeleteChatStickerSet","synthetic":false,"types":[]},{"text":"impl Clone for ExportChatInviteLink","synthetic":false,"types":[]},{"text":"impl Clone for GetChat","synthetic":false,"types":[]},{"text":"impl Clone for GetChatAdministrators","synthetic":false,"types":[]},{"text":"impl Clone for GetChatMembersCount","synthetic":false,"types":[]},{"text":"impl Clone for LeaveChat","synthetic":false,"types":[]},{"text":"impl Clone for PinChatMessage","synthetic":false,"types":[]},{"text":"impl Clone for SetChatAdministratorCustomTitle","synthetic":false,"types":[]},{"text":"impl Clone for SetChatDescription","synthetic":false,"types":[]},{"text":"impl Clone for SetChatPermissions","synthetic":false,"types":[]},{"text":"impl Clone for SetChatStickerSet","synthetic":false,"types":[]},{"text":"impl Clone for SetChatTitle","synthetic":false,"types":[]},{"text":"impl Clone for UnpinAllChatMessages","synthetic":false,"types":[]},{"text":"impl Clone for UnpinChatMessage","synthetic":false,"types":[]},{"text":"impl Clone for GetChatMember","synthetic":false,"types":[]},{"text":"impl Clone for KickChatMember","synthetic":false,"types":[]},{"text":"impl Clone for PromoteChatMember","synthetic":false,"types":[]},{"text":"impl Clone for RestrictChatMember","synthetic":false,"types":[]},{"text":"impl Clone for UnbanChatMember","synthetic":false,"types":[]},{"text":"impl Clone for GetMyCommands","synthetic":false,"types":[]},{"text":"impl Clone for SetMyCommands","synthetic":false,"types":[]},{"text":"impl Clone for GetGameHighScores","synthetic":false,"types":[]},{"text":"impl Clone for SendGame","synthetic":false,"types":[]},{"text":"impl Clone for SetGameScore","synthetic":false,"types":[]},{"text":"impl Clone for GetFile","synthetic":false,"types":[]},{"text":"impl Clone for CopyMessage","synthetic":false,"types":[]},{"text":"impl Clone for DeleteMessage","synthetic":false,"types":[]},{"text":"impl Clone for EditMessageCaption","synthetic":false,"types":[]},{"text":"impl Clone for EditMessageLiveLocation","synthetic":false,"types":[]},{"text":"impl Clone for StopMessageLiveLocation","synthetic":false,"types":[]},{"text":"impl Clone for EditMessageReplyMarkup","synthetic":false,"types":[]},{"text":"impl Clone for EditMessageText","synthetic":false,"types":[]},{"text":"impl Clone for ForwardMessage","synthetic":false,"types":[]},{"text":"impl Clone for SendMessage","synthetic":false,"types":[]},{"text":"impl Clone for SetPassportDataErrors","synthetic":false,"types":[]},{"text":"impl Clone for SendQuiz","synthetic":false,"types":[]},{"text":"impl Clone for SendPoll","synthetic":false,"types":[]},{"text":"impl Clone for StopPoll","synthetic":false,"types":[]},{"text":"impl Clone for SendChatAction","synthetic":false,"types":[]},{"text":"impl Clone for SendContact","synthetic":false,"types":[]},{"text":"impl Clone for SendDice","synthetic":false,"types":[]},{"text":"impl Clone for SendInvoice","synthetic":false,"types":[]},{"text":"impl Clone for SendLocation","synthetic":false,"types":[]},{"text":"impl Clone for SendVenue","synthetic":false,"types":[]},{"text":"impl Clone for DeleteStickerFromSet","synthetic":false,"types":[]},{"text":"impl Clone for GetStickerSet","synthetic":false,"types":[]},{"text":"impl Clone for SetStickerPositionInSet","synthetic":false,"types":[]},{"text":"impl Clone for GetUpdates","synthetic":false,"types":[]},{"text":"impl Clone for SetWebhook","synthetic":false,"types":[]},{"text":"impl Clone for DeleteWebhook","synthetic":false,"types":[]},{"text":"impl Clone for GetWebhookInfo","synthetic":false,"types":[]},{"text":"impl Clone for Close","synthetic":false,"types":[]},{"text":"impl Clone for GetMe","synthetic":false,"types":[]},{"text":"impl Clone for GetUserProfilePhotos","synthetic":false,"types":[]},{"text":"impl Clone for LogOut","synthetic":false,"types":[]},{"text":"impl Clone for Animation","synthetic":false,"types":[]},{"text":"impl Clone for Audio","synthetic":false,"types":[]},{"text":"impl Clone for BotCommand","synthetic":false,"types":[]},{"text":"impl Clone for CallbackQuery","synthetic":false,"types":[]},{"text":"impl Clone for ChatLocation","synthetic":false,"types":[]},{"text":"impl Clone for ChatMember","synthetic":false,"types":[]},{"text":"impl Clone for ChatMemberAdministrator","synthetic":false,"types":[]},{"text":"impl Clone for ChatMemberKicked","synthetic":false,"types":[]},{"text":"impl Clone for ChatMemberRestricted","synthetic":false,"types":[]},{"text":"impl Clone for ChatPermissions","synthetic":false,"types":[]},{"text":"impl Clone for ChatPhoto","synthetic":false,"types":[]},{"text":"impl Clone for Chat","synthetic":false,"types":[]},{"text":"impl Clone for ChannelChat","synthetic":false,"types":[]},{"text":"impl Clone for GroupChat","synthetic":false,"types":[]},{"text":"impl Clone for PrivateChat","synthetic":false,"types":[]},{"text":"impl Clone for SupergroupChat","synthetic":false,"types":[]},{"text":"impl Clone for ChatId","synthetic":false,"types":[]},{"text":"impl Clone for ChatAction","synthetic":false,"types":[]},{"text":"impl Clone for Command","synthetic":false,"types":[]},{"text":"impl Clone for Contact","synthetic":false,"types":[]},{"text":"impl Clone for Dice","synthetic":false,"types":[]},{"text":"impl Clone for DiceKind","synthetic":false,"types":[]},{"text":"impl Clone for Document","synthetic":false,"types":[]},{"text":"impl Clone for File","synthetic":false,"types":[]},{"text":"impl Clone for InputFileInfo","synthetic":false,"types":[]},{"text":"impl Clone for Game","synthetic":false,"types":[]},{"text":"impl Clone for GameHighScore","synthetic":false,"types":[]},{"text":"impl Clone for InputMessageContent","synthetic":false,"types":[]},{"text":"impl Clone for InputMessageContentContact","synthetic":false,"types":[]},{"text":"impl Clone for InputMessageContentLocation","synthetic":false,"types":[]},{"text":"impl Clone for InputMessageContentText","synthetic":false,"types":[]},{"text":"impl Clone for InputMessageContentVenue","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultArticle","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultAudio","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultCachedAudio","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultCachedDocument","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultCachedGif","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultCachedMpeg4Gif","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultCachedPhoto","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultCachedSticker","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultCachedVideo","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultCachedVoice","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultContact","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultDocument","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultGame","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultGif","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultLocation","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultMpeg4Gif","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultPhoto","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultVenue","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultVideo","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResultVoice","synthetic":false,"types":[]},{"text":"impl Clone for InlineQueryResult","synthetic":false,"types":[]},{"text":"impl Clone for InlineQuery","synthetic":false,"types":[]},{"text":"impl Clone for ChosenInlineResult","synthetic":false,"types":[]},{"text":"impl Clone for InputMediaAnimation","synthetic":false,"types":[]},{"text":"impl Clone for InputMediaAudio","synthetic":false,"types":[]},{"text":"impl Clone for InputMediaDocument","synthetic":false,"types":[]},{"text":"impl Clone for InputMediaPhoto","synthetic":false,"types":[]},{"text":"impl Clone for InputMediaVideo","synthetic":false,"types":[]},{"text":"impl Clone for Location","synthetic":false,"types":[]},{"text":"impl Clone for ProximityAlertTriggered","synthetic":false,"types":[]},{"text":"impl Clone for LoginUrl","synthetic":false,"types":[]},{"text":"impl Clone for MessageData","synthetic":false,"types":[]},{"text":"impl Clone for Forward","synthetic":false,"types":[]},{"text":"impl Clone for ForwardFrom","synthetic":false,"types":[]},{"text":"impl Clone for MessageKind","synthetic":false,"types":[]},{"text":"impl Clone for Message","synthetic":false,"types":[]},{"text":"impl Clone for EditMessageResult","synthetic":false,"types":[]},{"text":"impl Clone for ParseMode","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedPassportElement","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedPassportElementAddress","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedPassportElementBankStatement","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedPassportElementDriverLicense","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedPassportElementEmail","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedPassportElementIdentityCard","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedPassportElementInternalPassport","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedPassportElementPassport","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedPassportElementPassportRegistration","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedPassportElementPersonalDetails","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedPassportElementPhoneNumber","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedPassportElementRentalAgreement","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedPassportElementTemporaryRegistration","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedPassportElementUtilityBill","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedPassportElementKind","synthetic":false,"types":[]},{"text":"impl Clone for PassportElementError","synthetic":false,"types":[]},{"text":"impl Clone for UnexpectedEncryptedPassportElementKind","synthetic":false,"types":[]},{"text":"impl Clone for PassportData","synthetic":false,"types":[]},{"text":"impl Clone for PassportFile","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedCredentials","synthetic":false,"types":[]},{"text":"impl Clone for Invoice","synthetic":false,"types":[]},{"text":"impl Clone for LabeledPrice","synthetic":false,"types":[]},{"text":"impl Clone for OrderInfo","synthetic":false,"types":[]},{"text":"impl Clone for PreCheckoutQuery","synthetic":false,"types":[]},{"text":"impl Clone for ShippingAddress","synthetic":false,"types":[]},{"text":"impl Clone for ShippingOption","synthetic":false,"types":[]},{"text":"impl Clone for ShippingQuery","synthetic":false,"types":[]},{"text":"impl Clone for SuccessfulPayment","synthetic":false,"types":[]},{"text":"impl Clone for PhotoSize","synthetic":false,"types":[]},{"text":"impl Clone for Poll","synthetic":false,"types":[]},{"text":"impl Clone for PollKind","synthetic":false,"types":[]},{"text":"impl Clone for RegularPoll","synthetic":false,"types":[]},{"text":"impl Clone for Quiz","synthetic":false,"types":[]},{"text":"impl Clone for PollOption","synthetic":false,"types":[]},{"text":"impl Clone for PollAnswer","synthetic":false,"types":[]},{"text":"impl Clone for MessageId","synthetic":false,"types":[]},{"text":"impl Clone for ForceReply","synthetic":false,"types":[]},{"text":"impl Clone for InlineKeyboardMarkup","synthetic":false,"types":[]},{"text":"impl Clone for InlineKeyboardButton","synthetic":false,"types":[]},{"text":"impl Clone for InlineKeyboardButtonKind","synthetic":false,"types":[]},{"text":"impl Clone for ReplyKeyboardMarkup","synthetic":false,"types":[]},{"text":"impl Clone for KeyboardButton","synthetic":false,"types":[]},{"text":"impl Clone for KeyboardButtonPollType","synthetic":false,"types":[]},{"text":"impl Clone for ReplyKeyboardRemove","synthetic":false,"types":[]},{"text":"impl Clone for ReplyMarkup","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Response&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ResponseError","synthetic":false,"types":[]},{"text":"impl Clone for MaskPositionPoint","synthetic":false,"types":[]},{"text":"impl Clone for MaskPosition","synthetic":false,"types":[]},{"text":"impl Clone for Sticker","synthetic":false,"types":[]},{"text":"impl Clone for StickerSet","synthetic":false,"types":[]},{"text":"impl Clone for TextEntity","synthetic":false,"types":[]},{"text":"impl Clone for TextEntityBotCommand","synthetic":false,"types":[]},{"text":"impl Clone for TextEntityPosition","synthetic":false,"types":[]},{"text":"impl Clone for Text","synthetic":false,"types":[]},{"text":"impl Clone for Update","synthetic":false,"types":[]},{"text":"impl Clone for UpdateKind","synthetic":false,"types":[]},{"text":"impl Clone for WebhookInfo","synthetic":false,"types":[]},{"text":"impl Clone for AllowedUpdate","synthetic":false,"types":[]},{"text":"impl Clone for Me","synthetic":false,"types":[]},{"text":"impl Clone for User","synthetic":false,"types":[]},{"text":"impl Clone for UserProfilePhotos","synthetic":false,"types":[]},{"text":"impl Clone for UserId","synthetic":false,"types":[]},{"text":"impl Clone for Venue","synthetic":false,"types":[]},{"text":"impl Clone for Video","synthetic":false,"types":[]},{"text":"impl Clone for VideoNote","synthetic":false,"types":[]},{"text":"impl Clone for Voice","synthetic":false,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;Clone + Array&gt; Clone for ArrayVec&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone + Array&gt; Clone for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["tokio"] = [{"text":"impl Clone for OpenOptions","synthetic":false,"types":[]},{"text":"impl Clone for Interest","synthetic":false,"types":[]},{"text":"impl Clone for Ready","synthetic":false,"types":[]},{"text":"impl Clone for UCred","synthetic":false,"types":[]},{"text":"impl Clone for Handle","synthetic":false,"types":[]},{"text":"impl Clone for BarrierWaitResult","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for UnboundedSender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Instant","synthetic":false,"types":[]}];
implementors["tokio_rustls"] = [{"text":"impl Clone for TlsConnector","synthetic":false,"types":[]},{"text":"impl Clone for TlsAcceptor","synthetic":false,"types":[]}];
implementors["tokio_util"] = [{"text":"impl Clone for BytesCodec","synthetic":false,"types":[]},{"text":"impl Clone for Builder","synthetic":false,"types":[]},{"text":"impl Clone for LinesCodec","synthetic":false,"types":[]},{"text":"impl Clone for CancellationToken","synthetic":false,"types":[]},{"text":"impl&lt;L:&nbsp;Clone, R:&nbsp;Clone&gt; Clone for Either&lt;L, R&gt;","synthetic":false,"types":[]}];
implementors["tracing"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for WithDispatch&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Instrumented&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Span","synthetic":false,"types":[]}];
implementors["tracing_core"] = [{"text":"impl Clone for Identifier","synthetic":false,"types":[]},{"text":"impl Clone for Dispatch","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Display&gt; Clone for DisplayValue&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Debug&gt; Clone for DebugValue&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Field","synthetic":false,"types":[]},{"text":"impl Clone for Kind","synthetic":false,"types":[]},{"text":"impl Clone for Level","synthetic":false,"types":[]},{"text":"impl Clone for LevelFilter","synthetic":false,"types":[]},{"text":"impl Clone for ParseLevelFilterError","synthetic":false,"types":[]},{"text":"impl Clone for Id","synthetic":false,"types":[]},{"text":"impl Clone for Interest","synthetic":false,"types":[]}];
implementors["tracing_futures"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Instrumented&lt;T&gt;","synthetic":false,"types":[]}];
implementors["unicase"] = [{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for UniCase&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Ascii&lt;S&gt;","synthetic":false,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Clone for Level","synthetic":false,"types":[]},{"text":"impl Clone for BidiClass","synthetic":false,"types":[]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Decompositions&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Recompositions&lt;I&gt;","synthetic":false,"types":[]}];
implementors["untrusted"] = [{"text":"impl&lt;'a&gt; Clone for Input&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for EndOfInput","synthetic":false,"types":[]}];
implementors["url"] = [{"text":"impl&lt;S:&nbsp;Clone&gt; Clone for Host&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Origin","synthetic":false,"types":[]},{"text":"impl Clone for OpaqueOrigin","synthetic":false,"types":[]},{"text":"impl Clone for ParseError","synthetic":false,"types":[]},{"text":"impl Clone for SyntaxViolation","synthetic":false,"types":[]},{"text":"impl Clone for Position","synthetic":false,"types":[]},{"text":"impl Clone for Url","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ParseOptions&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["want"] = [{"text":"impl Clone for SharedGiver","synthetic":false,"types":[]}];
implementors["webpki"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for DNSName","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for DNSNameRef&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for InvalidDNSNameError","synthetic":false,"types":[]},{"text":"impl Clone for Time","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()